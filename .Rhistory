fordict <- dictionary(list(negative = negtest))
d$negative_count <- as.numeric(dfm(corpus(d$text), dictionary = mydict))
result <- summary(lm(log(favourites_count+1) ~ negative_count, data=d))
}
resultpar <- foreach(x=stats,.combine='c') %dopar% dobootstrap(x)
})
stopCluster(myCluster)
system.time({
for (i in 1:2){
negtest <- sample(neg.words,size = 10,replace = TRUE)
fordict <- dictionary(list(negative = negtest))
d$negative_count <- as.numeric(dfm(corpus(d$text), dictionary = mydict))
summary(lm(log(favourites_count+1) ~ negative_count, data=d))
}
})
system.time({
for (i in 1:2){
negtest <- sample(neg.words,size = 10,replace = TRUE)
fordict <- dictionary(list(negative = negtest))
d$negative_count <- as.numeric(dfm(corpus(d$text), dictionary = mydict))
summary(lm(log(favourites_count+1) ~ negative_count, data=d))
}
})
resultpar <- foreach(x=stats,.combine='c') %dopar% dobootstrap(x)
ls
MyData <- read.csv(file="c:/TheDataIWantToReadIn.csv", header=TRUE, sep=",")
df <- read.csv(file="c:/desktop/163/multiTimeline.csv")
df <- read.csv(file="user/desktop/163/multiTimeline.csv")
df <- read.csv(file="Users/Desktop/163/multiTimeline.csv")
df <- read.csv(file="Users/Desktop/163/multiTimeline.csv",header = TRUE)
df <- read.csv(file="/Users/ctwo/Desktop/163/multiTimeline.csv"
header = True)
df <- read.csv(file="/Users/ctwo/Desktop/163/multiTimeline.csv",header = TRUE)
View(df)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv(file="/Users/ctwo/Desktop/163/multiTimeline.csv",header = TRUE)
View(df)
df <- read.csv(file="/Users/ctwo/Desktop/163/multiTimeline.csv",header = TRUE)
View(df)
plot(df$X94, df$X2018.05.06, type="n", main='bs')
plot(df$X2018.05.06, df$X94, main='bs')
plot(df$X2018.05.06, df$X94,type="n", main='bs')
plot(df$X2018.05.06, df$X94,type="I", main='bs')
plot(df$X2018.05.06, df$X94,type="C", main='bs')
plot(df,type="O", main='bs')
lines(df, type = "o", col = "blue")
plot(df,type="O", main='bs')
lines(df, type = "o", col = "blue")
plot(df,type = "o",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
lines(df, type = "o", col = "blue")
plot(df,type = "o",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "o",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "I",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "n",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "o",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X2018.05.06,df$X94,type = "o",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$,df$X94,type = "o",col = "red", xlab = "Time", ylab = "Topic Index",
plot(df$X94,type = "o",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X2018.05.06 ,df$X94,type = "l",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(ddf$X94,type = "l",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
axis.POSIXct(1, at=df$X2018.05.06, labels=format(df$timestamp, "%m/%d"))
plot(df$X2018.05.06,df$X94,xaxt="n")
plot(df$X94,type = "l",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,df$X2018.05.06,type = "l",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X2018.05.06,df$X94,type = "l",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "o",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X2018.05.06,df$X94,type = "b",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X2018.05.06[month==5&year==2018],df$X94,type = "b",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X2018.05.06,df$X94,type = "b",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur",xlim=c(2015,2018))
plot(df$X2018.05.06,df$X94,type = "b",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur",xlim=c(2018,2019))
plot(df$X2018.05.06,df$X94,type = "b",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
lines(df$X2018.05.06[month==5&year==2018],df$X94, col="red")
lines(df$X2018.05.06[month==5&year==2018],df$X94[month==5&year==2018], col="red")
plot(df$X2018.05.06,df$X94,type = "b",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
df <- read.csv(file="/Users/ctwo/Desktop/163/multiTimeline.csv",header = TRUE)
plot(df$X2018.05.06,df$X94,type = "b",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
df <- read.csv(file="/Users/ctwo/Desktop/163/multiTimeline.csv",header = TRUE)
plot(df$X2018.05.06,df$X94,type = "b",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "Time", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "Time from 2018-05-06 to 2019-04-28", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "2018-05-06,2018-05-20, 2019-04-28", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "2018-05-06,2018-05-20,2018-06-10,......... 2019-04-28", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "2018-05-06 ,2018-05-20 ,2018-06-10 ,2018-08-12 ............. 2019-04-28", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "2018-05-06 ,2018-05-20 ,2018-06-10 ,2018-08-12 ........................ 2019-04-28", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "2018-05-06 ,2018-05-20 ,2018-06-10 ,2018-08-12 .......................... 2019-04-28", ylab = "Topic Index",
main = "Google Trend about ANTrepreneur")
plot(df$X94,type = "l",col = "red", xlab = "2018-05-06 ,2018-05-20 ,2018-06-10....... .......................... 2019-04-28", ylab = "Topic Index",
main = "Google Trend of word 'ANTrepreneur' ")
plot(df$X94,type = "l",col = "red", xlab = "2018-05-06 ,2018-05-20 ,2018-06-10......................................2019-04-07, 2019-04-28", ylab = "Topic Index",
main = "Google Trend of word 'ANTrepreneur' ")
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv(file="/Users/ctwo/Desktop/uspa.csv",header = TRUE)
View(df)
View(df)
View(df)
labor_efficiency <- df[,c(2,3)]
View(labor_efficiency)
path = Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨ctwo⁩ ▸ ⁨Desktop⁩
ls
GDPC1 <- read.csv(file ='User/ctwo/Desktop/GDPC1.csv' ,header = True)
GDPC1 <- read.csv(file ='Users/ctwo/Desktop/GDPC1.csv' ,header = True)
load("~/Desktop/GDPC1.csv")
GDPC1 <- read.csv(file ='users/ctwo/Desktop/GDPC1.csv' ,header = True)
GDPC1 <- read.csv(file ='~/Desktop/GDPC1.csv' ,header = True)
GDPC1 <- read.csv(file ='~/Desktop/GDPC1.csv',header = True)
/Users/ctwo/Desktop/GDPC1.csv
GDPC1 <- read.csv(file ='/Users/ctwo/Desktop/GDPC1.csv',header = True)
GDPC1 <- read.csv(file ='/Users/ctwo/Desktop/GDPC1.csv')
View(GDPC1)
#Q2:
GDPC1 <- read.csv(file ='/Users/ctwo/Desktop/GDPC1.csv')
GDPPOT <- read.csv(file='/Users/ctwo/Desktop/GDPPOT.csv')
View(GDPC1)
View(GDPPOT)
plot(GDPC1$DATE,GDPC$GDPC1,type="l",col="red")
plot(GDPC1$DATE,GDPC1$GDPC1,type="l",col="red")
lines(GDPPT$Date,GDPPT$GDPPT,col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,type="l",col="red")
lines(GDPPT$Date,GDPPT$GDPPOT,col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,type="l",col="red")
lines(GDPPOT$Date,GDPPT$GDPPOT,col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,type="l",col="red")
lines(GDPPOT$Date,GDPPOT$GDPPOT,col="green")
plot(GDPPOT$Date,GDPPOT$GDPPOT,col="green")
lines(GDPPOT$DATE,GDPPOT$GDPPOT,col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,type="l",col="red")
lines(GDPPOT$DATE,GDPPOT$GDPPOT,col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,type="l",col="red")
lines(GDPPOT$DATE,GDPPOT$GDPPOT,col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,col="red")
plot(GDPC1$DATE,GDPC1$GDPC1,col="red")
lines(GDPPOT$DATE,GDPPOT$GDPPOT,col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,type = 'l',col="red")
lines(GDPPOT$DATE,GDPPOT$GDPPOT,type = 'l',col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,type = 'l',col="yellow")
lines(GDPPOT$DATE,GDPPOT$GDPPOT,type = 'l',col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,type = 'l',col="yellow",xlab = 'Date',ylab = 'RealGDP&Potential')
lines(GDPPOT$DATE,GDPPOT$GDPPOT,type = 'l',col="green")
plot(GDPC1$DATE,GDPC1$GDPC1,type = 'l',col="yellow",xlab = 'Date',ylab = 'RealGDP&PotentialGDP',sub = 'RealGDP=Black,PotentialGDP=red')
lines(GDPPOT$DATE,GDPPOT$GDPPOT,type = 'l',col="red")
compare <- data.frame(c(GDPPOT$GDPPOT,GDPC1$GDPC1))
View(compare)
compare <- data.frame(GDPPOT$GDPPOT,GDPC1$GDPC1)
View(compare)
View(GDPC1)
plot(GDPC1$DATE,GDPC1$GDPC1,type = 'l',col="black",xlab = 'Date',ylab = 'RealGDP&PotentialGDP',sub = 'RealGDP=Black,PotentialGDP=Red')
lines(GDPPOT$DATE,GDPPOT$GDPPOT,type = 'l',col="red")
above<-GDPPOT$GDPPOT>GDPC1$GDPC1
intersect.points<-which(diff(above)!=0)
GDPC1 <- read.csv(file ='/Users/ctwo/Desktop/GDPC1.csv')
fit1 <- lm(y1 ~ x1)
df1 <- data.frame(x=1:50, y=1:50/2+rnorm(50)+10)
m1 <- lm(y~x, df1)
df2 <- data.frame(x=1:25, y=25:1*2+rnorm(25)-10)
m2 <- lm(y~x, df2)
plot(df1)
points(df2)
plot(GDPC1$DATE,GDPC1$GDPC1,type = 'l',col="black",xlab = 'Date',ylab = 'RealGDP&PotentialGDP',sub = 'RealGDP=Black,PotentialGDP=Red')
lines(GDPPOT$DATE,GDPPOT$GDPPOT,type = 'l',col="red")
#finding intersection
compare <- data.frame(GDPPOT$GDPPOT,GDPC1$GDPC1)
above<-GDPPOT$GDPPOT - GDPC1$GDPC1
above<- c(GDPPOT$GDPPOT - GDPC1$GDPC1)
above<- GDPPOT$GDPPOT - GDPC1$GDPC1
abpve
above
data.frame(above)
a<-data.frame(above)
View(a)
View(compare)
View(GDPC1)
126129
126 189
plot(GDPC1$DATE,GDPC1$GDPC1,type = 'l',col="black",xlab = 'Date',ylab = 'RealGDP&PotentialGDP',sub = 'RealGDP=Black,PotentialGDP=Red')
lines(GDPPOT$DATE,GDPPOT$GDPPOT,type = 'l',col="red")
1980-04-01 1996-01-01
277 - 237
189 - 126
View(a)
View(compare)
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, ((GDPC1-GDPPOT)/GDPPOT)100)
output <- with(compare, ((GDPC1-GDPPOT)/GDPPOT)100)
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, GDPC1-GDPPOT)
#finding intersection
compare <- data.frame(GDPPOT$GDPPOT,GDPC1$GDPC1)
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, GDPC1.GDPC1-GDPPOT.GDPPOT)
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, (GDPC1.GDPC1-GDPPOT.GDPPOT)/GDPPOT.GDPPOT)
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, 100*((GDPC1.GDPC1-GDPPOT.GDPPOT)/GDPPOT.GDPPOT))
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, ((GDPC1.GDPC1-GDPPOT.GDPPOT)/GDPPOT.GDPPOT))
#finding intersection
compare <- data.frame(GDPPOT$GDPPOT,GDPC1$GDPC1)
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, GDPC1.GDPC1-GDPPOT.GDPPOT)
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, (GDPC1.GDPC1-GDPPOT.GDPPOT)/GDPPOT)
#finding intersection
compare <- data.frame(GDPPOT$GDPPOT,GDPC1$GDPC1)
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, (GDPC1.GDPC1-GDPPOT.GDPPOT)/GDPPOT.GDPPOT)
#Calculate Output gap = 100 x (actualGDP-potentialGDP)/potentialGDP
compare$outputgap <- with(compare, 100*((GDPC1.GDPC1-GDPPOT.GDPPOT)/GDPPOT.GDPPOT))
e <- data.frame(GDPC1$DATE,compare$outputgap)
View(e)
plot(GDPC1$DATE,compare$outputgap,type = 'l',col="black",xlab = 'Date',ylab = 'OutputGap',sub = 'OutputGap')
plot(GDPC1$DATE,compare$outputgap,col="black",xlab = 'Date',ylab = 'OutputGap',sub = 'OutputGap')
plot(e$GDPC1.DATE,e$compare.outputgap,col="black",xlab = 'Date',ylab = 'OutputGap',sub = 'OutputGap')
plot(e$GDPC1.DATE,e$compare.outputgap,type='L'col="black",xlab = 'Date',ylab = 'OutputGap',sub = 'OutputGap')
plot(e$GDPC1.DATE,e$compare.outputgap,type='l',col="black",xlab = 'Date',ylab = 'OutputGap',sub = 'OutputGap')
View(e)
plot(e$GDPC1.DATE,e$compare.outputgap,type="l",col="black",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
plot(compare$GDPPOT.GDPPOT,compare$GDPC1.GDPC1,type="l",col="black",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
plot(e$GDPC1.DATE,e$compare.outputgap,type="l",col="black",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
View(e)
plot(e$GDPC1.DATE,GDPC1$GDPC1,type="l",col="black",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
plot(GDPC1$DATE,GDPC1$GDPC1,type="l",col="black",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
plot(GDPC1$DATE,GDPC1$GDPC1,type="l",col="black",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
plot(GDPPOT$DATE,GDPPOT$GDPPOT,type="l",col="black",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
plot(GDPPOT$DATE,GDPPOT$GDPPOT,type="l",col="black",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
plot(GDPPOT$DATE,GDPPOT$GDPPOT,type="l",col="red",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
lines(e$GDPC1.DATE,e$compare.outputgap,type = 'l',col="red")
plot(e$GDPC1.DATE,e$compare.outputgap,type="l",col="red",xlab = 'Date',ylab = 'OutputGap',main = 'OutputGap')
lines(e$GDPC1.DATE,e$compare.outputgap,type = 'l',col="red")
output <- with(compare, ((GDPC1-GDPPOT)/GDPPOT)100)
max(e$compare.outputgap)
which.max(e$compare.outputgap)
which.min(e$compare.outputgap)
library(matrixStats)
install.packages(matrixStats)
isntall.packages(matrixStats)
install.packages(matrixStats)
require(matrixStats)
library(matrixStats)
install(library(matrixStats))
install.packages("matrixStats")
colSds(e$compare.outputgap)
colSds(e)
sapply(split.default(e, names(e)), function(x) apply(x, 1, sd, na.rm=TRUE))
sapply(e$compare.outputgap, sd, na.rm = TRUE)
sapply(e, sd, na.rm = TRUE)
sapply(e, sd)
library(matrixStats)
colSds(e)
colSds(e$compare.outputgap)
colSds(e,e$compare.outputgap)
rowSds(e)
rowSds(e$compare.outputgap)
sd(e,na.rm=TRUE)
colSds(as.matrix(e), na.rm=TRUE)
colSds(as.matrix(e$compare.outputgap), na.rm=TRUE)
#Q2(a):
GDPC1 <- read.csv(file ='/Users/ctwo/Desktop/GDPC1.csv')
GDPC1 <- read.csv(file ='/Users/ctwo/Desktop/GDPC1.csv')
boxplot(GDPC1$GDPC1 ~ GDPC1$DATE, data = GDPC1, main = 'RealGDP of US', xlab= 'Date', ylab = 'GDP growth', col='burlywood3', border = 'brown4')
boxplot(GDPC1 ~ DATE, data = GDPC1, main = 'RealGDP of US', xlab= 'Date', ylab = 'GDP growth', col='burlywood3', border = 'brown4')
#Import US quarterly GDP dataframe
GDPC1 <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
View(GDPC1)
#Import US quarterly GDP dataframe
btc <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
View(btc)
btc <- btc[-c(2,8)]
View(btc)
btc[-c(20:),]
newdf <- btc[10,6]
newdf <- btc[c(10),6]
newdf <- btc[10,[1,2,3,4,5,6]]
newdf <- btc[10 [1,2,3,4,5,6]]
newdf <- btc[,c(1,2,3,4,5,6)]
View(newdf)
newdf <- btc[c(1,2,3,4,5),c(1,2,3,4,5,6)]
View(newdf)
newdf <- btc[c(1:10),c(1,2,3,4,5,6)]
View(newdf)
newdf <- btc[c(1:20),c(1:6)]
#create a smaller dataset for better visualization
newdf <- btc[c(1:20),c(1:6)]
View(newdf)
library(tidyr)
install.packages("tidyr")
library(reshape)
install.packages("reshape")
x2[,"Price"] <- as.numeric(gsub("X", "" , x2[,"Price"]))
x2 <- melt(newdf, id = c("X2019.06.05"), variable_name = "Price")
library(reshape)
x2 <- melt(newdf, id = c("X2019.06.05"), variable_name = "Price")
View(x2)
btc <- btc[-c(2,8)] #drop unrelavent columns
newdf <- btc[c(1:20),c(1:6)] #create a smaller dataset for better visualization
btc <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
#this csv has way too many data, data clean is necessary for this assignment
btc <- btc[-c(2,8)] #drop unrelavent columns
newdf <- btc[c(1:20),c(1:6)] #create a smaller dataset for better visualization
#create the Boxplot
btc <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
#this csv has way too many data, data clean is necessary for this assignment
btc <- btc[-c(2,8)] #drop unrelavent columns
newdf <- btc[c(1:20),c(1:6)] #create a smaller dataset for better visualization
#create the Boxplot
#Import US quarterly GDP dataframe
btc <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
#this csv has way too many data, data clean is necessary for this assignment
btc <- btc[-c(2,8)] #drop unrelavent columns
#this csv has way too many data, data clean is necessary for this assignment
btc <- btc[-c(2,8)]
#Import US quarterly GDP dataframe
btc <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
#this csv has way too many data, data clean is necessary for this assignment
btc <- btc[-c(2,8)]
View(btc)
#drop unrelavent columns
newdf <- btc[c(1:20),c(1:6)]
#drop unrelavent columns
newdf <- btc[c(1:20),c(1:6)]
View(newdf)
View(newdf)
View(btc)
#Import US quarterly GDP dataframe
btc <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
View(btc)
#this csv has way too many data, data clean is necessary for this assignment
btc <- btc[-c(2,7,8)]
View(btc)
#drop unrelavent columns
newdf <- btc[c(1:20),c(1:5)]
View(newdf)
colnames(newdf) <- ('date','price','price','price','price')
colnames(newdf) <- ("date","price","price","price","price")
View(newdf)
colnames(newdf) <- ("date" "price","price","price","price")
colnames(newdf) <- ("date","price","price","price","price")
names(newdf) <- ("date","price","price","price","price")
names(newdf)[1]<-"date"
View(newdf)
names(newdf)[2:5]<-"price"
View(btc)
View(newdf)
View(newdf)
btc <- btc[-c(2,7,8)]
#drop unrelavent columns
btc <- btc[c(1:20),c(1:5)]
btc <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
#this csv has way too many data, data clean is necessary for this assignment
btc <- btc[-c(2,7,8)]
#drop unrelavent columns
btc <- btc[c(1:20),c(1:5)]
names(btc)[1]<-"date"
names(btc)[2:5]<-"price"
View(btc)
library(reshape2)
#modify dataframe for boxplot
test <- btc
melt(test,id.vars = c(date))
melt(test,id.vars = c("date"))
View(test)
melt(test,id.vars = "date")
test <- melt(test,id.vars = "date")
View(newdf)
test <- test[c(-2)]
View(test)
View(test)
test <- melt(wide,id.vars = c("date"))
library(reshape)
test <- melt(wide,id.vars = c("date"))
test <- melt(newdf,id.vars = c("date"))
View(test)
test <- melt(newdf,id.vars=1)
test <- melt(newdf,id = 'date')
View(test)
#drop unrelavent columns
#create a smaller dataset for better visualization
btc <- btc[c(1:10),c(1:5)]
names(btc)[1]<-"date"
names(btc)[2:5]<-"price"
#modify dataframe for boxplot
test <- btc
te <- test
reshape(te, varying = NULL, idvar = "date", direction, sep = "")
reshape(te, varying = NULL, timevar = "time", idvar = "id", direction, sep = "")
library(tidyr)
te <- gather(test, key, value, na.rm = FALSE, convert = FALSE)
View(te)
te <- reshape(test,direction='long')
te <- reshape(test,direction="long",varying = list(names(test)[2:5]),idvar="date")
te <- melt(test,id.var=1)
te <- melt(test,id.var=[1,2])
te <- melt(test,id.var=1:2)
melt(test, measure.vars = 2:5)
te <-melt(test, measure.vars = 2:5)
library(data.table)
te <- melt(setDT(test), id.vars = c("date"), variable.name = "price")
View(te)
#modify dataframe for boxplot
newdf <- melt(setDT(btc), id.vars = c("date"), variable.name = "price")
newdf <- melt(setDT(btc), id.vars = c("date"))
View(newdf)
View(newdf)
newdf
btc <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
#this csv has way too many data, data clean is necessary for this assignment
btc <- btc[-c(2,7,8)]
#drop unrelavent columns
#create a smaller dataset for better visualization
btc <- btc[c(1:10),c(1:5)]
#change col names
names(btc)[1]<-"date"
names(btc)[2:5]<-"price"
#modify dataframe for boxplot
newdf <- melt(setDT(btc), id.vars = c("date"), variable.name = "price")
View(newdf)
newdf<- newdf[-c(2)]
View(newdf)
newdf<- newdf[-c(3)]
View(newdf)
te <- newdf[-c(2)]
View(te)
te <- newdf[-c(2),]
View(te)
te <- newdf[-c("price"),]
#modify dataframe for boxplot
newdf <- melt(setDT(btc), id.vars = c("date"), variable.name = "price")
View(btc)
View(newdf)
boxplot(date~price, date = newdf, main="bitcoin price",xlab='date',ylab='price')
boxplot(date~value, date = newdf, main="bitcoin price",xlab='date',ylab='price')
boxplot(date~newdf$value, date = newdf, main="bitcoin price",xlab='date',ylab='price')
boxplot(date~newdf$value, date = newdboxplot(mpg~cyl,data=mtcars, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
f, main="bitcoin price",xlab='date',ylab='price')
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(date~value, date = newdf, main="bitcoin price",xlab='date',ylab='price')
boxplot(date~date, date = newdf, main="bitcoin price",xlab='date',ylab='price')
n <- data.frame(newdf)
View(n)
boxplot(date~date, date = n, main="bitcoin price",xlab='date',ylab='price')
boxplot(price~date, date = newdf, main="bitcoin price",xlab='date',ylab='price')
View(newdf)
boxplot(date~value,data = newdf,main="bitcoin")
boxplot(date~value,data = newdf,main="bitcoin",notch=True)
boxplot(newdf$value)
botxplot(newdf$date)
boxplot(newdf$date)
View(newdf)
newdf$date <-  as.integer(newdf$date)
View(newdf)
boxplot(date~value,data = newdf,main="bitcoin")
boxplot(value~date,data = newdf,main="bitcoin")
boxplot(value~date,data = newdf,main="bitcoin")
boxplot(value~date,data = newdf,main="bitcoin")
boxplot(value~date,data = newdf,main="bitcoin")
boxplot(value~date,data = newdf,main="Bitcoin Price of 10 Days",xlab="Exchange's timestamp",ylab="Price",col="burlywood3",border="brown4")
boxplot(value~date,data = newdf,main="Bitcoin Price of 10 Days",xlab="Exchange's timestamp",ylab="Price",col="burlywood3",border="brown4")
boxplot(value~date,data = newdf,main="Bitcoin Price of 10 Days",xlab="Exchange's timestamp",ylab="Price",col="burlywood3",border="brown4")
#Import US quarterly GDP dataframe
btc <- read.csv(file ='/Users/ctwo/Desktop/btc.csv')
#this csv has way too many data, data clean is necessary for this assignment
btc <- btc[-c(2,7,8)]
#drop unrelavent columns
#create a smaller dataset for better visualization
btc <- btc[c(1:10),c(1:5)]
#change col names
names(btc)[1]<-"date"
names(btc)[2:5]<-"price"
#modify dataframe for boxplot
newdf <- melt(setDT(btc), id.vars = c("date"), variable.name = "price")
#Change factor col to int
newdf$date <-  as.integer(newdf$date)
#Finally boxplot
boxplot(value~date,data = newdf,main="Bitcoin Price of 10 Days",xlab="Exchange's timestamp",ylab="Price",col="burlywood3",border="brown4")
boxplot(value~date,data = newdf,main="Bitcoin Price of 10 Days",xlab="Exchange's timestamp",ylab="Price",col="burlywood3",border="brown4")
